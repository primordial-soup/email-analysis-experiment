#!/usr/bin/env perl

use Modern::Perl;
use IO::File;
use autodie qw(:all);
use FindBin::libs;
use EnronBerkeley::ProjectHelper;
use Term::ProgressBar;

use Inline with => 'EnronBerkeley::MalletHelper';
use Inline Java => <<JAVA ;

import java.io.*;
import java.util.*;

class DumpFeatures {
	public static Object get_features(String file_name) throws IOException, ClassNotFoundException {
		List<Object> results = new ArrayList<Object>();
		FileInputStream fis = new FileInputStream(file_name);
		ObjectInputStream ois = new ObjectInputStream(fis);

		try {
			results.add(ois.readObject());
		} catch (OptionalDataException e) {
			if (!e.eof) throw e;
		} finally {
			ois.close();
		}
		//System.out.println( results );
		return results.get(0);
	}
}
JAVA


my $mallet_path = EnronBerkeley::ProjectHelper->output_file('enron.mallet');
my $svm_output_path = EnronBerkeley::ProjectHelper->output_file('enron.libsvm');

my $df = DumpFeatures->get_features( "$mallet_path" );
my $instance_array = $df->toArray;
my $alphabet_array = $instance_array->[0]->getAlphabet->toArray;


my $progress = Term::ProgressBar->new({name => 'Instances', count => $instance_array->length, remove => 1, ETA => 'linear' });
my $email_idx = 0;

my $svm_output = $svm_output_path->openw_utf8;
for my $instance_idx (0..$instance_array->length-1) {
	my $instance = $instance_array->[$instance_idx];
	my $class_label = $instance->getTarget->toString;
	my $feat_vec = $instance->getData;

	## Which file did the features come from?
	my $file = $instance_array->[$instance_idx]->getName;
	my $file_libsvm = $file =~ s/://gr; # need to clean the filename for LIBSVM comment

	my $ind = $feat_vec->getIndices;
	my $val = $feat_vec->getValues;

	$svm_output->print( $class_label );
	## need to add one because feature index must start at 1
	for my $idx (0..$ind->length-1) {
		next if $val->[$idx] == 0; # the sparse representation returned by Mallet sometimes returns zeroes
		$svm_output->print( sprintf(" %d:%.7f", $ind->[$idx] + 1, $val->[$idx] ) );
	}
	# add the file as a comment (see FAQ "Q: May I put comments in data files?") <http://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html#f306>
	$svm_output->say(" # $file_libsvm");

	## Show the feature alphabet for the instance
	#my %feat_map;
	#@feat_map{ @$alphabet_array[ @$ind ] } = @$val;
	#use DDP; p %feat_map;

	$progress->update(++$email_idx);
}
